{"version":3,"sources":["theme/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["customTheme","extendTheme","config","initialColorMode","useSystemColorMode","colors","brand","50","100","200","300","400","500","600","700","800","900","fonts","heading","body","components","Heading","baseStyle","fontWeight","Button","borderRadius","theme","radii","variants","solid","bg","color","outline","borderColor","App","minH","flexDir","alignItems","justifyContent","fontSize","bgGradient","bgClip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","css","ReactDOM","render","StrictMode","styles","document","getElementById"],"mappings":"kKAoDeA,EA7CKC,YAAY,CAC9BC,OAN0B,CAC1BC,iBAAkB,OAClBC,oBAAoB,GAKpBC,OAAQ,CACNC,MAAO,CACLC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,YAGTC,MAAO,CACLC,QAAS,UACTC,KAAM,WAERC,WAAY,CACVC,QAAS,CACPC,UAAW,CACTC,WAAY,MAGhBC,OAAQ,CACNF,UAAW,CACTC,WAAY,IACZE,aAAcC,QAAMC,MAAN,IAEhBC,SAAU,CACRC,MAAO,CACLC,GAAI,YACJC,MAAO,SAETC,QAAS,CACPC,YAAa,YACbF,MAAO,kB,iECrBFG,I,EAAAA,EAtBf,WACE,OACE,eAAC,IAAD,CACEC,KAAK,QACLC,QAAQ,SACRC,WAAW,SACXC,eAAe,SAJjB,UAME,cAAC,IAAD,CACEC,SAAU,CAAC,MAAO,MAAO,OACzBC,WAAW,iCACXC,OAAO,OAHT,mBAOA,cAAC,IAAD,CAAMV,MAAM,WAAWQ,SAAS,MAAhC,6BCHSG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCCRQ,EAAeC,YAAH,gSAWlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAgB7B,MAAOA,EAAvB,UACE,cAAC,IAAD,CAAQ8B,OAAQL,IAChB,cAAC,EAAD,SAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.b10a58f0.chunk.js","sourcesContent":["import { extendTheme, ThemeConfig, theme } from '@chakra-ui/react';\n\nconst config: ThemeConfig = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n};\n\nconst customTheme = extendTheme({\n  config,\n  colors: {\n    brand: {\n      50: '#E7F3FE',\n      100: '#BBDDFC',\n      200: '#8FC7FA',\n      300: '#63B1F8',\n      400: '#379CF6',\n      500: '#0B86F4',\n      600: '#096BC3',\n      700: '#075092',\n      800: '#043662',\n      900: '#021B31',\n    },\n  },\n  fonts: {\n    heading: 'Poppins',\n    body: 'Poppins',\n  },\n  components: {\n    Heading: {\n      baseStyle: {\n        fontWeight: 700,\n      },\n    },\n    Button: {\n      baseStyle: {\n        fontWeight: 600,\n        borderRadius: theme.radii['xl'],\n      },\n      variants: {\n        solid: {\n          bg: 'brand.500',\n          color: 'white',\n        },\n        outline: {\n          borderColor: 'brand.500',\n          color: 'brand.500',\n        },\n      },\n    },\n  },\n});\n\nexport default customTheme;\n","import { Flex, Heading, Text } from '@chakra-ui/layout';\n\nfunction App() {\n  return (\n    <Flex\n      minH='100vh'\n      flexDir='column'\n      alignItems='center'\n      justifyContent='center'\n    >\n      <Heading\n        fontSize={['6xl', '6xl', '8xl']}\n        bgGradient='linear(to-r, #FF0080, #7928CA)'\n        bgClip='text'\n      >\n        MistX\n      </Heading>\n      <Text color='gray.400' fontSize='2xl'>\n        Gasless DEX\n      </Text>\n    </Flex>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'focus-visible/dist/focus-visible';\n\nimport theme from './theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { Global, css } from '@emotion/react';\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <Global styles={GlobalStyles} />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}