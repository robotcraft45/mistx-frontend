{"version":3,"sources":["types/index.ts","theme/index.ts","config/index.ts","services/wallet.ts","context/wallet.tsx","components/exchang-form.tsx","utils/index.ts","components/wallet.tsx","components/header.tsx","App.tsx","reportWebVitals.ts","theme/global-css.ts","index.tsx"],"names":["Network","customTheme","extendTheme","config","initialColorMode","useSystemColorMode","colors","brand","50","100","200","300","400","500","600","700","800","900","fonts","heading","body","components","Heading","baseStyle","fontWeight","Button","borderRadius","theme","radii","variants","solid","bg","color","outline","borderColor","networkId","MAINNET","mistAddress","rpcUrl","dappId","appName","WalletStateContext","createContext","undefined","WalletProvider","children","useState","provider","setProvider","address","setAddress","network","setNetwork","ethBalance","setEthBalance","mistBalance","setMistBalance","wallet","setWallet","loading","setLoading","onboard","setOnboard","notify","setNotify","useEffect","subscriptions","balance","ethers","utils","formatEther","selectedAddress","handleSetWallet","handleSetProvider","Onboard","darkMode","walletSelect","wallets","walletName","preferred","infuraKey","label","apiKey","walletCheck","checkName","Notify","Contract","IUniswapV2ERC20","abi","getSigner","balanceOf","then","previouslySelectedWallet","window","localStorage","getItem","selected","ethersProvider","providers","Web3Provider","setItem","name","Provider","value","useWallet","context","useContext","Error","ExchangeForm","token","amount","icon","from","setFrom","to","setTo","handleConnect","a","handleSetMax","isEth","currentFrom","toString","maxW","p","boxShadow","size","mb","textAlign","onSubmit","e","preventDefault","alert","id","isDisabled","pr","type","placeholder","variant","onChange","prev","target","height","width","alignItems","onClick","disabled","background","my","justifyContent","isRound","aria-label","currentTo","mr","isFullWidth","colorScheme","isLoading","truncate","string","start","end","length","slice","Wallet","handleClick","columns","gridTemplateColumns","borderTopLeftRadius","borderBottomLeftRadius","pl","loadingText","Header","fontSize","bgGradient","bgClip","App","minH","flexDir","mt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","css","ReactDOM","render","StrictMode","styles","document","getElementById"],"mappings":"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","file":"static/js/main.7155a6a5.chunk.js","sourcesContent":["export enum Network {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GOERLI = 5,\n  KOVAN = 42,\n  xDAI = 100,\n}\n","import { extendTheme, ThemeConfig, theme } from '@chakra-ui/react';\n\nconst config: ThemeConfig = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n};\n\nconst customTheme = extendTheme({\n  config,\n  colors: {\n    brand: {\n      50: '#E7F3FE',\n      100: '#BBDDFC',\n      200: '#8FC7FA',\n      300: '#63B1F8',\n      400: '#379CF6',\n      500: '#0B86F4',\n      600: '#096BC3',\n      700: '#075092',\n      800: '#043662',\n      900: '#021B31',\n    },\n  },\n  fonts: {\n    heading: 'Poppins',\n    body: 'Poppins',\n  },\n  components: {\n    Heading: {\n      baseStyle: {\n        fontWeight: 700,\n      },\n    },\n    Button: {\n      baseStyle: {\n        fontWeight: 600,\n        borderRadius: theme.radii['xl'],\n      },\n      variants: {\n        solid: {\n          bg: 'brand.500',\n          color: 'white',\n        },\n        outline: {\n          borderColor: 'brand.500',\n          color: 'brand.500',\n        },\n      },\n    },\n  },\n});\n\nexport default customTheme;\n","import { Network } from '../types';\n\ntype Config = {\n  networkId: Network;\n  mistAddress: string;\n  rpcUrl: string;\n  dappId: string;\n  appName: string;\n};\n\nexport const config: Config = {\n  networkId: Network.MAINNET,\n  mistAddress: '0x88acdd2a6425c3faae4bc9650fd7e27e0bebb7ab',\n  rpcUrl: 'https://mainnet.infura.io/v3/5505e75053fb4b1ea7ee11fa60f42529',\n  dappId: '6bc363be-f6c0-4593-8edd-761472d54dfe',\n  appName: 'mistX',\n};\n","import Onboard from 'bnc-onboard';\nimport Notify, { API as NotifyAPI } from 'bnc-notify';\nimport { API as OnboardAPI, Wallet } from 'bnc-onboard/dist/src/interfaces';\nimport { Dispatch, SetStateAction } from 'react';\nimport { Network } from '../types';\nimport { config } from '../config';\n\ntype Subscriptions = {\n  address: Dispatch<SetStateAction<string | undefined>>;\n  network: Dispatch<SetStateAction<Network | undefined>>;\n  balance: (balance: string) => void;\n  wallet: (wallet: Wallet) => void;\n};\n\nconst { dappId, networkId, rpcUrl, appName } = config;\n\nexport function initOnboard(subscriptions: Subscriptions): OnboardAPI {\n  return Onboard({\n    dappId,\n    networkId,\n    darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: [\n        { walletName: 'metamask', preferred: true },\n        { walletName: 'trust', preferred: true },\n        { walletName: 'authereum', preferred: true },\n        { walletName: 'coinbase', preferred: true },\n        {\n          walletName: 'walletConnect',\n          infuraKey: 'd5e29c9b9a9d4116a7348113f57770a8',\n          preferred: true,\n        },\n        {\n          walletName: 'portis',\n          label: 'Portis',\n          apiKey: 'e86e917b-b682-4a5c-bbc5-0f8c3b787562',\n          preferred: true,\n        },\n        { walletName: 'opera' },\n        { walletName: 'torus' },\n        { walletName: 'status' },\n        { walletName: 'walletLink', appName, rpcUrl },\n        { walletName: 'frame' },\n        { walletName: 'operaTouch' },\n        { walletName: 'imToken', rpcUrl },\n        { walletName: 'meetone' },\n        { walletName: 'mykey', rpcUrl },\n        { walletName: 'wallet.io', rpcUrl },\n        { walletName: 'huobiwallet', rpcUrl },\n        { walletName: 'hyperpay' },\n        { walletName: 'atoken' },\n        { walletName: 'liquality' },\n      ],\n    },\n    walletCheck: [\n      { checkName: 'derivationPath' },\n      { checkName: 'connect' },\n      { checkName: 'accounts' },\n      { checkName: 'network' },\n    ],\n  });\n}\n\nexport function initNotify(): NotifyAPI {\n  return Notify({\n    dappId,\n    networkId,\n  });\n}\n","import { ethers } from 'ethers';\nimport { config } from '../config';\nimport { Network } from '../types';\nimport { Wallet } from 'bnc-onboard/dist/src/interfaces';\nimport { initNotify, initOnboard } from '../services/wallet';\nimport IUniswapV2ERC20 from '../contracts/IUniswapV2ERC20.json';\nimport {\n  createContext,\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\ntype WalletProviderContext = {\n  provider?: ethers.providers.Web3Provider;\n  address?: string;\n  network?: Network;\n  ethBalance?: string;\n  mistBalance?: string;\n  wallet?: Wallet;\n  loading?: boolean;\n  onboard?: ReturnType<typeof initOnboard>;\n  notify?: ReturnType<typeof initNotify>;\n};\n\ntype WalletProviderProps = { children: ReactElement };\n\nconst WalletStateContext = createContext<WalletProviderContext | undefined>(\n  undefined\n);\n\nfunction WalletProvider({ children }: WalletProviderProps): ReactElement {\n  const [provider, setProvider] = useState<ethers.providers.Web3Provider>();\n  const [address, setAddress] = useState<string>();\n  const [network, setNetwork] = useState<Network>();\n  const [ethBalance, setEthBalance] = useState<string>();\n  const [mistBalance, setMistBalance] = useState<string>();\n  const [wallet, setWallet] = useState<Wallet>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [onboard, setOnboard] = useState<ReturnType<typeof initOnboard>>();\n  const [notify, setNotify] = useState<ReturnType<typeof initNotify>>();\n\n  useEffect(() => {\n    const onboard = initOnboard({\n      address: setAddress,\n      network: setNetwork,\n      balance: (balance) => {\n        if (balance) {\n          setEthBalance(ethers.utils.formatEther(balance));\n        }\n      },\n      wallet: (wallet: Wallet) => {\n        if (wallet?.provider?.selectedAddress) {\n          handleSetWallet(wallet);\n          handleSetProvider(wallet);\n          setLoading(false);\n        } else {\n          setProvider(undefined);\n          setWallet(undefined);\n          setEthBalance(undefined);\n          setMistBalance(undefined);\n          setLoading(false);\n        }\n      },\n    });\n\n    setOnboard(onboard);\n    setNotify(initNotify());\n  }, []);\n\n  useEffect(() => {\n    if (provider && address) {\n      const contract = new ethers.Contract(\n        config.mistAddress,\n        IUniswapV2ERC20.abi,\n        provider.getSigner()\n      );\n\n      contract.balanceOf(address).then((balance: string) => {\n        setMistBalance(ethers.utils.formatEther(balance));\n      });\n    }\n  }, [provider, address]);\n\n  useEffect(() => {\n    const previouslySelectedWallet = window.localStorage.getItem(\n      'selectedWallet'\n    );\n\n    if (!previouslySelectedWallet) {\n      setLoading(false);\n    }\n\n    if (previouslySelectedWallet && onboard) {\n      onboard\n        .walletSelect(previouslySelectedWallet)\n        .then((selected) => selected && onboard.walletCheck());\n    }\n  }, [onboard]);\n\n  const handleSetProvider = (wallet: Wallet) => {\n    const ethersProvider = new ethers.providers.Web3Provider(wallet.provider);\n    setProvider(ethersProvider);\n  };\n\n  const handleSetWallet = (wallet: Wallet) => {\n    setWallet(wallet);\n    window.localStorage.setItem('selectedWallet', wallet.name || '');\n  };\n\n  return (\n    <WalletStateContext.Provider\n      value={{\n        provider,\n        address,\n        network,\n        ethBalance,\n        mistBalance,\n        wallet,\n        loading,\n        onboard,\n        notify,\n      }}\n    >\n      {children}\n    </WalletStateContext.Provider>\n  );\n}\n\nfunction useWallet(): WalletProviderContext {\n  const context = useContext(WalletStateContext);\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n}\n\nexport { WalletProvider, useWallet };\n","import { Button, IconButton } from '@chakra-ui/button';\nimport {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n} from '@chakra-ui/form-control';\nimport { Input, InputGroup, InputRightElement } from '@chakra-ui/input';\nimport { Box, Container, Flex, Heading, HStack } from '@chakra-ui/layout';\nimport { HiOutlineSwitchVertical } from 'react-icons/hi';\nimport { useState } from 'react';\nimport { useWallet } from '../context/wallet';\n\nfunction ExchangeForm() {\n  const { loading, onboard, wallet, ethBalance, mistBalance } = useWallet();\n  const [from, setFrom] = useState({ token: 'mist', amount: '', icon: '⚗️' });\n  const [to, setTo] = useState({ token: 'eth', amount: '', icon: '⧫' });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    alert('Submit order');\n  };\n\n  const handleSwitch = () => {\n    const currentFrom = { ...from };\n    const currentTo = { ...to };\n\n    setFrom(currentTo);\n    setTo(currentFrom);\n  };\n\n  const isValid = () => {\n    return true;\n  };\n\n  const handleConnect = async () => {\n    onboard?.walletSelect().then((selected) => {\n      selected && onboard?.walletCheck();\n    });\n  };\n\n  const handleSetMax = async () => {\n    const isEth = from.token === 'eth';\n\n    setFrom((currentFrom) => ({\n      ...currentFrom,\n      amount: isEth\n        ? ethBalance?.toString() || '0.0'\n        : mistBalance?.toString() || '0.0',\n    }));\n  };\n\n  return (\n    <Container maxW='lg'>\n      <Box bg='gray.700' p={8} borderRadius={24} boxShadow='3xl'>\n        <Heading size='lg' mb={4} textAlign='center'>\n          Exchange\n        </Heading>\n        <form onSubmit={handleSubmit}>\n          <FormControl id='from' isDisabled={!wallet}>\n            <FormLabel>From</FormLabel>\n            <InputGroup>\n              <Input\n                size='lg'\n                pr='10rem'\n                type='number'\n                placeholder='0.0'\n                variant='filled'\n                value={from.amount}\n                onChange={(e) =>\n                  setFrom((prev) => ({ ...prev, amount: e.target.value }))\n                }\n              />\n              <InputRightElement height='100%' width='10rem'>\n                <HStack alignItems='center'>\n                  <Button\n                    size='sm'\n                    variant='outline'\n                    onClick={handleSetMax}\n                    disabled={!wallet}\n                  >\n                    Max\n                  </Button>\n                  <Button size='sm' background='gray.600' disabled={!wallet}>\n                    {from.icon} {from.token}\n                  </Button>\n                </HStack>\n              </InputRightElement>\n            </InputGroup>\n            <FormHelperText>Minimum quantity: 0.2</FormHelperText>\n          </FormControl>\n\n          <Flex my={-3} justifyContent='flex-end'>\n            <IconButton\n              isRound\n              variant='ghost'\n              aria-label='Switch'\n              onClick={handleSwitch}\n              icon={<HiOutlineSwitchVertical />}\n            />\n          </Flex>\n\n          <FormControl id='to' mb={4} isDisabled={!wallet}>\n            <FormLabel>To</FormLabel>\n            <InputGroup>\n              <Input\n                size='lg'\n                pr='4rem'\n                type='number'\n                placeholder='0.0'\n                variant='filled'\n                value={to.amount}\n                onChange={(e) =>\n                  setTo((prev) => ({ ...prev, amount: e.target.value }))\n                }\n              />\n              <InputRightElement height='100%' width='fit-content' mr={2}>\n                <HStack alignItems='center'>\n                  <Button size='sm' background='gray.600' disabled={!wallet}>\n                    {to.icon} {to.token}\n                  </Button>\n                </HStack>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          {wallet ? (\n            <Button\n              isFullWidth\n              size='lg'\n              colorScheme='brand'\n              disabled={!isValid()}\n              type='submit'\n            >\n              Exchange\n            </Button>\n          ) : (\n            <Button\n              isFullWidth\n              size='lg'\n              colorScheme='brand'\n              onClick={handleConnect}\n              isLoading={loading}\n            >\n              Connect wallet\n            </Button>\n          )}\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default ExchangeForm;\n","export function truncate(\n  string: String = '',\n  start: number = 6,\n  end: number = 4\n) {\n  if (start < 1 || end < 1) {\n    return string;\n  }\n\n  if (string.length <= start + end) {\n    return string;\n  }\n\n  return string.slice(0, start) + '...' + string.slice(-end);\n}\n","import { Button } from '@chakra-ui/button';\nimport { Box, Flex, SimpleGrid, Text } from '@chakra-ui/layout';\nimport { useWallet } from '../context/wallet';\nimport { truncate } from '../utils';\n\nfunction Wallet() {\n  const { onboard, loading, address, wallet, ethBalance } = useWallet();\n\n  const handleClick = async () => {\n    onboard?.walletSelect().then((selected) => {\n      selected && onboard?.walletCheck();\n    });\n  };\n\n  return (\n    <SimpleGrid\n      columns={ethBalance ? 2 : 1}\n      gridTemplateColumns={ethBalance ? 'auto 1fr' : '1fr'}\n    >\n      {ethBalance && (\n        <Flex\n          mr={-2}\n          bg='gray.700'\n          alignItems='center'\n          borderTopLeftRadius={16}\n          borderBottomLeftRadius={16}\n        >\n          <Box pl={3} pr={5}>\n            <Text>\n              <strong>{ethBalance}</strong> ETH\n            </Text>\n          </Box>\n        </Flex>\n      )}\n      <Button\n        colorScheme='brand'\n        onClick={handleClick}\n        loadingText='Connecting'\n        isLoading={loading}\n      >\n        {wallet ? truncate(address) : 'Connect'}\n      </Button>\n    </SimpleGrid>\n  );\n}\n\nexport default Wallet;\n","import { Flex, Heading } from '@chakra-ui/layout';\nimport Wallet from './wallet';\n\nfunction Header() {\n  return (\n    <Flex justifyContent='space-between' alignItems='center' p={4}>\n      <Heading\n        fontSize={['2xl', '4xl']}\n        bgGradient='linear(to-r, #FF0080, #7928CA)'\n        bgClip='text'\n      >\n        mistX\n      </Heading>\n      <Wallet />\n    </Flex>\n  );\n}\n\nexport default Header;\n","import { Box, Flex } from '@chakra-ui/layout';\nimport ExchangeForm from './components/exchang-form';\nimport Header from './components/header';\n\nfunction App() {\n  return (\n    <Flex minH='100vh' flexDir='column'>\n      <Header />\n      <Box mt={16}>\n        <ExchangeForm />\n      </Box>\n    </Flex>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { css } from '@emotion/react';\n\nexport const GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n  .bn-onboard-custom.bn-onboard-dark-mode {\n    background: #2f3747 !important;\n  }\n  .bn-onboard-custom.bn-onboard-dark-mode-background-hover:hover,\n  .bn-onboard-custom.bn-onboard-dark-mode-background {\n    background: #1a202c !important;\n  }\n  .bn-onboard-custom.bn-onboard-dark-mode-link {\n    color: #0b86f4 !important;\n    border-color: #0b86f4 !important;\n  }\n  .bn-onboard-selected-wallet {\n    background: #0b86f4 !important;\n  }\n  .bn-onboard-custom.bn-onboard-modal {\n    z-index: 999 !important;\n  }\n`;\n","import 'focus-visible/dist/focus-visible';\n\nimport theme from './theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { WalletProvider } from './context/wallet';\nimport { GlobalStyles } from './theme/global-css';\nimport { Global } from '@emotion/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WalletProvider>\n      <ChakraProvider theme={theme}>\n        <Global styles={GlobalStyles} />\n        <App />\n      </ChakraProvider>\n    </WalletProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}